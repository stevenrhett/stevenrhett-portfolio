"use strict";Object.defineProperty(exports, "__esModule", { value: true });var react_1 = require("react");var react_2 = require("react");// import "./App.css";var react_3 = require("@headlessui/react");var outline_1 = require("@heroicons/react/24/outline");var solid_1 = require("@heroicons/react/20/solid");var body_tsx_1 = require("./body.tsx");var sidebarNavigation = [    { name: "Home", href: "#", icon: outline_1.HomeIcon, current: false },    { name: "All Files", href: "#", icon: outline_1.Squares2X2Icon, current: false },    { name: "Photos", href: "#", icon: outline_1.PhotoIcon, current: true },    { name: "Shared", href: "#", icon: outline_1.UserGroupIcon, current: false },    { name: "Albums", href: "#", icon: outline_1.RectangleStackIcon, current: false },    { name: "Settings", href: "#", icon: outline_1.CogIcon, current: false },];var userNavigation = [    { name: "Your Profile", href: "#" },    { name: "Sign out", href: "#" },];function classNames() {    var classes = [];    for (var _i = 0; _i < arguments.length; _i++) {        classes[_i] = arguments[_i];    }    return classes.filter(Boolean).join(" ");}function Dashboard() {    var _a = (0, react_2.useState)(false), mobileMenuOpen = _a[0], setMobileMenuOpen = _a[1];    return (<>      <div className="flex h-full">        {/* Narrow sidebar */}        <div className="hidden w-28 overflow-y-auto bg-indigo-700 md:block">          <div className="flex w-full flex-col items-center py-6">            <div className="flex flex-shrink-0 items-center"></div>            <div className="mt-6 w-full flex-1 space-y-1 px-2">              {sidebarNavigation.map(function (item) { return (<a key={item.name} href={item.href} className={classNames(item.current                ? "bg-indigo-800 text-white"                : "text-indigo-100 hover:bg-indigo-800 hover:text-white", "group w-full p-3 rounded-md flex flex-col items-center text-xs font-medium")} aria-current={item.current ? "page" : undefined}>                  <item.icon className={classNames(item.current                ? "text-white"                : "text-indigo-300 group-hover:text-white", "h-6 w-6")} aria-hidden="true"/>                  <span className="mt-2">{item.name}</span>                </a>); })}            </div>          </div>        </div>        {/* Mobile menu */}        <react_3.Transition.Root show={mobileMenuOpen} as={react_2.Fragment}>          <react_3.Dialog as="div" className="relative z-20 md:hidden" onClose={setMobileMenuOpen}>            <react_3.Transition.Child as={react_2.Fragment} enter="transition-opacity ease-linear duration-300" enterFrom="opacity-0" enterTo="opacity-100" leave="transition-opacity ease-linear duration-300" leaveFrom="opacity-100" leaveTo="opacity-0">              <div className="fixed inset-0 bg-gray-600 bg-opacity-75"/>            </react_3.Transition.Child>            <div className="fixed inset-0 z-40 flex">              <react_3.Transition.Child as={react_2.Fragment} enter="transition ease-in-out duration-300 transform" enterFrom="-translate-x-full" enterTo="translate-x-0" leave="transition ease-in-out duration-300 transform" leaveFrom="translate-x-0" leaveTo="-translate-x-full">                <react_3.Dialog.Panel className="relative flex w-full max-w-xs flex-1 flex-col bg-indigo-700 pt-5 pb-4">                  <react_3.Transition.Child as={react_2.Fragment} enter="ease-in-out duration-300" enterFrom="opacity-0" enterTo="opacity-100" leave="ease-in-out duration-300" leaveFrom="opacity-100" leaveTo="opacity-0">                    <div className="absolute top-1 right-0 -mr-14 p-1">                      <button type="button" className="flex h-12 w-12 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-white" onClick={function () { return setMobileMenuOpen(false); }}>                        <outline_1.XMarkIcon className="h-6 w-6 text-white" aria-hidden="true"/>                        <span className="sr-only">Close sidebar</span>                      </button>                    </div>                  </react_3.Transition.Child>                  <div className="flex flex-shrink-0 items-center px-4">                    <img className="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=white" alt="Your Company"/>                  </div>                  <div className="mt-5 h-0 flex-1 overflow-y-auto px-2">                    <nav className="flex h-full flex-col">                      <div className="space-y-1">                        {sidebarNavigation.map(function (item) { return (<a key={item.name} href={item.href} className={classNames(item.current                ? "bg-indigo-800 text-white"                : "text-indigo-100 hover:bg-indigo-800 hover:text-white", "group py-2 px-3 rounded-md flex items-center text-sm font-medium")} aria-current={item.current ? "page" : undefined}>                            <item.icon className={classNames(item.current                ? "text-white"                : "text-indigo-300 group-hover:text-white", "mr-3 h-6 w-6")} aria-hidden="true"/>                            <span>{item.name}</span>                          </a>); })}                      </div>                    </nav>                  </div>                </react_3.Dialog.Panel>              </react_3.Transition.Child>              <div className="w-14 flex-shrink-0" aria-hidden="true">                {/* Dummy element to force sidebar to shrink to fit close icon */}              </div>            </div>          </react_3.Dialog>        </react_3.Transition.Root>        {/* Content area */}        <div className="flex flex-1 flex-col overflow-hidden">          <header className="w-full">            <div className="relative z-10 flex h-16 flex-shrink-0 border-b border-gray-200 bg-white shadow-sm">              <button type="button" className="border-r border-gray-200 px-4 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden" onClick={function () { return setMobileMenuOpen(true); }}>                <span className="sr-only">Open sidebar</span>                <outline_1.Bars3BottomLeftIcon className="h-6 w-6" aria-hidden="true"/>              </button>              <div className="flex flex-1 justify-between px-4 sm:px-6">                <div className="flex flex-1">                  <form className="flex w-full bg-blue-200 md:ml-0" action="src#" method="GET">                    <label htmlFor="search-field" className="sr-only">                      Search all files                    </label>                    <div className="relative w-full text-gray-400 focus-within:text-gray-600">                      <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center">                        <solid_1.MagnifyingGlassIcon className="h-5 w-5 flex-shrink-0" aria-hidden="true"/>                      </div>                      <input name="search-field" id="search-field" className="h-full w-full border-transparent py-2 pl-8 pr-3 text-base text-gray-900 placeholder-gray-500 focus:border-transparent focus:placeholder-gray-400 focus:outline-none focus:ring-0" placeholder="Search" type="search"/>                    </div>                  </form>                </div>                <div className="ml-2 flex items-center space-x-4 sm:ml-6 sm:space-x-6">                  {/* Profile dropdown */}                  <react_3.Menu as="div" className="relative flex-shrink-0">                    <div>                      <react_3.Menu.Button className="flex rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">                        <span className="sr-only">Open user menu</span>                        <img className="h-8 w-8 rounded-full" src="https://images.unsplash.com/photo-1517365830460-955ce3ccd263?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=8&w=256&h=256&q=80" alt=""/>                      </react_3.Menu.Button>                    </div>                    <react_3.Transition as={react_2.Fragment} enter="transition ease-out duration-100" enterFrom="transform opacity-0 scale-95" enterTo="transform opacity-100 scale-100" leave="transition ease-in duration-75" leaveFrom="transform opacity-100 scale-100" leaveTo="transform opacity-0 scale-95">                      <react_3.Menu.Items className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">                        {userNavigation.map(function (item) { return (<react_3.Menu.Item key={item.name}>                            {function (_a) {                var active = _a.active;                return (<a href={item.href} className={classNames(active ? "bg-gray-100" : "", "block px-4 py-2 text-sm text-gray-700")}>                                {item.name}                              </a>);            }}                          </react_3.Menu.Item>); })}                      </react_3.Menu.Items>                    </react_3.Transition>                  </react_3.Menu>                  <button type="button" className="flex items-center justify-center rounded-full bg-indigo-600 p-1 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">                    <outline_1.PlusIcon className="h-6 w-6" aria-hidden="true"/>                    <span className="sr-only">Add file</span>                  </button>                </div>              </div>            </div>          </header>          {/* Main content */}          <div className="flex flex-1 items-stretch overflow-hidden">            <main className="flex-1 overflow-y-auto">              <body_tsx_1.default />              <section aria-labelledby="primary-heading" className="flex h-full min-w-0 flex-1 flex-col lg:order-last">                <h1 id="primary-heading" className="sr-only">                  Photos                </h1>                {/* Your content */}              </section>            </main>            {/* Secondary column (hidden on smaller screens) */}            <aside className="hidden w-96 overflow-y-auto border-l border-gray-200 bg-white lg:block"></aside>          </div>        </div>      </div>    </>);}exports.default = Dashboard;